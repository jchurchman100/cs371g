==2053== Memcheck, a memory error detector
==2053== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2053== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2053== Command: ./TestInteger
==2053==
--2053-- run: /usr/bin/dsymutil "./TestInteger"
warning: no debug symbols in executable (-arch x86_64)
Running main() from gtest_main.cc
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from IntegerFixture
[ RUN      ] IntegerFixture.test
[       OK ] IntegerFixture.test (21 ms)
[----------] 1 test from IntegerFixture (34 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (78 ms total)
[  PASSED  ] 1 test.
==2053==
==2053== HEAP SUMMARY:
==2053==     in use at exit: 26,431 bytes in 193 blocks
==2053==   total heap usage: 372 allocs, 179 frees, 182,936 bytes allocated
==2053==
==2053== LEAK SUMMARY:
==2053==    definitely lost: 0 bytes in 0 blocks
==2053==    indirectly lost: 0 bytes in 0 blocks
==2053==      possibly lost: 2,064 bytes in 1 blocks
==2053==    still reachable: 0 bytes in 0 blocks
==2053==         suppressed: 24,367 bytes in 192 blocks
==2053== Rerun with --leak-check=full to see details of leaked memory
==2053==
==2053== For counts of detected and suppressed errors, rerun with: -v
==2053== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File './Integer.h'
Lines executed:100.00% of 4
Branches executed:66.67% of 6
Taken at least once:33.33% of 6
No calls
./Integer.h:creating 'Integer.h.gcov'
